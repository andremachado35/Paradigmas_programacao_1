import java.util.*;
import java.io.*;

/**
 * ZooDeMamiferos é uma lista descritiva dos vários
 * mamíferos de um jardim zoológico, cujas classes
 * são SUBCLASSES de MAMÍFERO !!
 * 
 * 
 * @author FMM 
 * @version 1.0 (Abril 2005)
 */

public class ZooMam {


	
	private ArrayList<Mamifero> zooList; 

	public ZooMam() { zooList = new ArrayList<Mamifero>(); }
	public ZooMam(ArrayList<Mamifero> animais) {
	    zooList = new ArrayList<Mamifero>(animais);
	}
				
	// Métodos de Instância

	public int totalAnimais() { return zooList.size(); }

     public void juntaMamif(Mamifero mam) { 
        zooList.add(mam); 
     }
  
     public void juntaMamifs(ArrayList<Mamifero> mamifs) { 
         zooList.addAll(mamifs); 
     }
		
	/**
	 * Devolve um ArrayList de Mamiferos do zoo com peso 
	 * superior ao peso dado
	 */
	public ArrayList<Mamifero> pesoSupA(int peso) {
	   ArrayList<Mamifero> mamRes = new ArrayList<Mamifero>();
	   for(Mamifero mamif : zooList) {
	       if(mamif.daPeso() > peso) mamRes.add(mamif);
	    }
	    return mamRes;
	}
	
	/**
	 * Devolve uma Collection de Mamiferos do zoo com nome 
	 * iniciado pela letra dada como parâmetro
	 */
	public ArrayList<Mamifero> nomeIniciadoPor(char letra) {
	   ArrayList<Mamifero> mamRes = new ArrayList<Mamifero>();
	   for(Mamifero mamif: zooList) {
	       if(mamif.daNome().charAt(0) == letra) mamRes.add(mamif);
	    }
	    return mamRes;
	}

	   
	/**
	 * Lista com os nomes dos animais
	 */
	public ArrayList<String> nomes() {
	    ArrayList<String> nomes = new ArrayList<String>();
	    for(Mamifero mamif : zooList) {
	        nomes.add(mamif.daNome());
	    }
	    return nomes;
	}
	
	/**
	 * Lista dos Caes
	 */
	public ArrayList<Mamifero> lstCaes() {
	    ArrayList<Mamifero> caes = new ArrayList<Mamifero>();
	    for(Mamifero mamif : zooList) {
	        if(mamif.getClass().getSimpleName().equals("Cao"))
	           caes.add(mamif.clone());
	    }
	    return caes;
	}

	
	/**
	 * Verifica se nome do animal indicado existe
	 */
	public boolean existeNome(String nome) {
	    return (this.nomes().contains(nome));
    }
    
    /**
     * Dá o 1º Mamifero cujo nome começa pela letra
     * dada como parâmetro. Trata-se de um exemplo de
     * pesquisa.
     */
    public Mamifero animalDeNomeIniciadoPor(char letra) {
        Iterator it = zooList.iterator();
        Mamifero mamif = null;
        boolean encontrado = false;
        while(it.hasNext() && !encontrado) {
            mamif = (Mamifero) it.next();
	        if( mamif.daNome().charAt(0) == letra ) encontrado = true;
	    }
	    return mamif;
	 }
	
	/**
	 * toString()
	 */
	public String toString() {
	    StringBuffer s = new StringBuffer();
	    s.append("--------  JARDIM ZOOLÓGICO DE JAVA5 ----------\n");
	    for(Mamifero mam : zooList) {
	        s.append(mam.toString());
	    }
	    return s.toString();
    }
    
    /**
     * Número de animais de dado tipo (CLASSE).
     */
    public int animaisPorTipo(String tipo) {
        int conta = 0;
        for(Mamifero mamif : zooList) {
            if( (mamif.getClass().getSimpleName()).equals(tipo) ) 
               conta++;
        }
        return conta;
   }
   
   /**
    * Escreve num ficheiro de texto as fichas de todos os 
    * animais do Jardim Zoológico.
    */
   public void gravaEmFichTxt(String fich) {
       try {
           FileWriter f = new FileWriter(fich);
           f.write(this.toString());
           f.flush(); f. close();
       }
       catch(IOException e) {};
    }
   
}
	
	
